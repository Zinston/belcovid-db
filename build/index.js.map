{"version":3,"sources":["../src/index.js"],"names":["MongoClient","MONGO_URI","useUnifiedTopology","client","connect","console","error","close","connectMongoDB","catch","then","db","server","get","req","res","params","key","fromId","diff","statusCode","send","updates","updated","use","next","status","listen","process","env","PORT","log"],"mappings":";;;qEA0CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACsB,IAAIA,iBAAJ,CAAgBC,oBAAhB,EAA2B,EAACC,oBAAoB,IAArB,EAA3B,CADtB;;AAAA;AACOC,YADP;AAAA;AAAA;AAAA,aAGQA,OAAOC,OAAP,EAHR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAKEC,cAAQC,KAAR;AALF;AAAA,aAMQH,OAAOI,KAAP,EANR;;AAAA;AAAA,wCAQQJ,MARR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,E;;iBAAeK,c;;;;;AA1Cf;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;AAEAA,iBAAiBC,KAAjB,CAAuBJ,QAAQC,KAA/B,EAAsCI,IAAtC,CAA2C,kBAAU;AACpD,KAAMC,KAAKR,OAAOQ,EAAP,CAAU,UAAV,CAAX;;AAEA,KAAMC,SAAS,wBAAf;AACAA,QAAOC,GAAP,CAAW,eAAX;AAAA,qEAA4B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAER,kBAAQJ,EAAR,EAAYG,IAAIE,MAAJ,CAAWC,GAAvB,EAA4BH,IAAIE,MAAJ,CAAWE,MAAvC,CAFQ;;AAAA;AAErBC,WAFqB;;AAG3BJ,WAAIK,UAAJ,GAAiB,GAAjB;AACAL,WAAIM,IAAJ,CAASF,IAAT;;AAJ2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;AAMAP,QAAOC,GAAP,CAAW,OAAX;AAAA,sEAAoB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEA,kBAAQJ,EAAR,EAAYG,IAAIE,MAAJ,CAAWC,GAAvB,CAFA;;AAAA;AAEbE,WAFa;;AAGnBJ,WAAIK,UAAJ,GAAiB,GAAjB;AACAL,WAAIM,IAAJ,CAASF,IAAT;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;AAMAP,QAAOC,GAAP,CAAW,SAAX;AAAA,sEAAsB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACC,yBAAeJ,EAAf,CADD;;AAAA;AACfW,cADe;;AAErBP,WAAIK,UAAJ,GAAiB,GAAjB;AACAL,WAAIM,IAAJ,CAAS,EAACE,SAASD,OAAV,EAAT;;AAHqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;;AAMA;AACAV,QAAOY,GAAP,CAAW,UAACV,GAAD,EAAMC,GAAN,EAAWU,IAAX,EAAoB;AAC9BV,MAAIW,MAAJ,CAAW,GAAX;AACAX,MAAIM,IAAJ,CAAS,qBAAT;AACA,EAHD;;AAKA;AACA;AACAT,QAAOe,MAAP,CAAcC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAlC,EAAwC,YAAM;AAC7C;AACAzB,UAAQ0B,GAAR,yBAAiCH,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAArD;AACA,EAHD;AAIA,CAlCD","file":"index.js","sourcesContent":["import express from 'express';\nimport MongoClient from 'mongodb';\nimport {MONGO_URI} from './constants.js';\nimport {getDiff} from './get.js';\nimport {updateDatabase} from './put.js';\n\nconnectMongoDB().catch(console.error).then(client => {\n\tconst db = client.db('belcovid');\n\n\tconst server = express();\n\tserver.get('/:key/:fromId', async (req, res) => {\n\t\t// Get the diff between the data at given id and the latest data.\n\t\tconst diff = await getDiff(db, req.params.key, req.params.fromId);\n\t\tres.statusCode = 200;\n\t\tres.send(diff);\n\t});\n\tserver.get('/:key', async (req, res) => {\n\t\t// Get the full diff.\n\t\tconst diff = await getDiff(db, req.params.key);\n\t\tres.statusCode = 200;\n\t\tres.send(diff);\n\t});\n\tserver.get('/update', async (req, res) => {\n\t\tconst updates = await updateDatabase(db);\n\t\tres.statusCode = 200;\n\t\tres.send({updated: updates});\n\t});\n\n\t// Handle 404 - Keep this as a last route\n\tserver.use((req, res, next) => {\n\t\tres.status(404);\n\t\tres.send('404: File Not Found');\n\t});\n\n\t// listen for request on port 3000, and as a callback function have the port listened on logged\n\t// eslint-disable-next-line no-undef\n\tserver.listen(process.env.PORT || 3000, () => {\n\t\t// eslint-disable-next-line no-console,no-undef\n\t\tconsole.log(`Listening to port ${process.env.PORT || 3000}`);\n\t});\n});\n\nasync function connectMongoDB() {\n\tconst client = await new MongoClient(MONGO_URI, {useUnifiedTopology: true});\n\ttry {\n\t\tawait client.connect();\n\t} catch (e) {\n\t\tconsole.error(e);\n\t\tawait client.close();\n\t}\n\treturn client;\n}\n"]}